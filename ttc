#!/usr/bin/env python3

import os
import sys
import argparse
import tiktoken

def token_count(content, model):
    try:
        encoding = tiktoken.encoding_for_model(model)
    except KeyError:
        encoding = tiktoken.get_encoding(default)

    return len(encoding.encode(content))

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Count tokens in files.')
    parser.add_argument('-m', '--model', default='gpt-4', help='TikToken model name (default: gpt-4)')
    parser.add_argument('files', metavar='FILE', nargs='*', help='Files to process (default: read from stdin)')
    args = parser.parse_args()

    if not args.files:
        content = sys.stdin.read()
        count = token_count(content, args.model)
        print(count)
    else:
        total = 0
        file_count = 0

        for filename in args.files:
            try:
                with open(filename, 'r') as f:
                    content = f.read()
            except IOError as e:
                print(f"Error: {e}")
                continue

            count = token_count(content, args.model)
            print(f"{count:8} {filename}")
            total += count
            file_count += 1

        if file_count > 1:
            print(f"{total:8} total")
